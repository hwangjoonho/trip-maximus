<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.maximusteam.tripfulaxel.user.model.dao.UserMapper">
 
    <resultMap id="userResult" type="UserDTO">
      <result column="USER_CODE" property="userCode" />
      <result column="USER_NAME" property="userName" />
      <result column="USER_PHONE" property="userPhone" />
      <result column="USER_PWD" property="userPwd" />
      <result column="USER_BDAY" property="userBday" />
      <result column="USER_GENDER" property="userGender" />
      <result column="USER_EMAIL" property="userEmail" />
      <result column="USER_REGISTER_DAY" property="userRegisterDay" />
      <result column="USER_REPORT_COUNT" property="userReportCount" />
      <result column="USER_GUIDE_YN" property="userGuideYN" />
    </resultMap>
    
	
	<!-- 회원가입  -->
	<!--  parameterType : 파라미터의 타입을 지정한다. 이미 정의된 별칭을 사용할 수 있거나, 클래스의 full-name을 적어준다.  -->
	<insert id="registUser" parameterType="com.maximusteam.tripfulaxel.user.model.dto.UserDTO">
	 <selectKey resultType="int"  keyProperty="userCode" order="BEFORE">
	 	SELECT MAX(USER_CODE) + 1 FROM USER
	 </selectKey>
		INSERT INTO USER 
		(
			 USER_CODE
		   , USER_NAME
		   , USER_PHONE
		   , USER_PWD
		   , USER_BDAY
		   , USER_GENDER
		   , USER_EMAIL
		   , USER_REGISTER_DAY
		)
        VALUES
        (
            #{ userCode }
          , #{ userName }
          , #{ userPhone }
          , #{ userPwd }
          , #{ userBday }
          , #{ userGender }
          , #{ userEmail }
          , NOW()
        )
	</insert>
	
	<!-- 이메일 중복 체크용 -->
	<select id="duplicationCheck" resultType="int" parameterType="UserDTO">
		SELECT 
		       COUNT(*)
		  FROM USER
		 WHERE USER_EMAIL = #{ userEmail }
	</select>
	
	<!-- 로그인 확인용 -->
	<select id="loginUser" resultMap="userResult" parameterType="UserDTO">
		SELECT
			   USER_NAME
			 , USER_CODE
			 , USER_PHONE
			 , USER_PWD
			 , USER_BDAY
			 , USER_GENDER
			 , USER_EMAIL
			 , USER_REGISTER_DAY
			 , USER_REPORT_COUNT
			 , USER_GUIDE_YN
		  FROM USER
		  WHERE USER_EMAIL = #{ userEmail } 
	<![CDATA[
		    AND USER_REPORT_COUNT < 3
	     ]]>
	</select>
	
	<select id="findEmail" resultMap="userResult" parameterType="USerDTO">
	     SELECT 
	            USER_EMAIL
	       FROM USER
	      WHERE USER_NAME = #{ userName } 
	        AND USER_PHONE = #{ userPhone }
	        AND USER_BDAY = #{ userBday } 
	</select>

</mapper>

