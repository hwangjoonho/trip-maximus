<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
   
   <!-- sqlSessionTemplate 필요한 경우(옛날 방식) -->
   <!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSessionFactory"/>
   </bean> -->
   <!-- <bean id="messageTemplate" class="org.springframework.messaging.simp.SimpMessagingTemplate">
   		<property name=""></property>
   </bean>
   
   <bean id="messageChannel">
   	
   </bean> -->
   
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
      <property name="dataSource" ref="dataSource"/>
   </bean>

   <bean id="rdataSource" class="org.apache.commons.dbcp.BasicDataSource"
      destroy-method="close">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
      <property name="url" value="jdbc:mysql://13.209.158.238:3306/tripfulaxel__?" />
      <property name="username" value="tripfulaxel" />
      <property name="password" value="maximusTeam" />
      <property name="defaultAutoCommit" value="false" />
   </bean>
   
   <bean id="dataSource"
      class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
      <constructor-arg ref="rdataSource"></constructor-arg>
      <property name="logFormatter">
         <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
            <property name="loggingType" value="MULTI_LINE" />
            <property name="sqlPrefix" value="[SQL]" />
         </bean>
      </property>
   </bean>
   
   <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>

	<!-- 주영 추가 : 메일  시작 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="465" />
		<property name="username" value="jeongjuyoung1129@naver.com" />
		<property name="password" value="dkssudgktpdy1!" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean> 
	<!-- 주영 추가 : 메일 끝  -->
   
   
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
      <tx:attributes>
         <tx:method name="find*" read-only="true" rollback-for="Exception" />
         <tx:method name="search*" read-only="true" rollback-for="Exception" />
         <tx:method name="select*" read-only="true" rollback-for="Exception" />
         <tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED" isolation="SERIALIZABLE"/>
         <tx:method name="update*" rollback-for="Exception" propagation="REQUIRED" isolation="SERIALIZABLE" />
         <tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED" isolation="SERIALIZABLE" />
      </tx:attributes>
   </tx:advice> 
   
   <aop:config proxy-target-class="true">
      <aop:pointcut id="serviceMethod"
         expression="execution(* com.maximusteam.tripfulaxel..*ServiceImpl.*(..))" />
      <aop:advisor id="transactionAdvisor" pointcut-ref="serviceMethod"
         advice-ref="txAdvice" />
   </aop:config>
   
   <!--  dao 추가해주어야 함 -->
   <mybatis-spring:scan 
      base-package="com.maximusteam.tripfulaxel.*.model.dao"/> 
      
</beans>